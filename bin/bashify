#!/bin/bash
############################################################################
# Bashify - Bash Scripting Support
#
# Copyright (C) 2007 by Hallison Vasconcelos Batista
# --------------------------------------------------------------------------
#   This program is free software; you can redistribute it and or modify
#   it under the terms of the GNU Lesser General Public License as
#   published by the Free Software Foundation; either version 2 of the
#   License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the
#   Free Software Foundation, Inc.,
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# --------------------------------------------------------------------------

#DOC
# Author       : Hallison Vasconcelos Batista <hallison.batista@gmail.com>
# Timestamp    : 2007.11.04 22:25:35 AMT
# Version      : 0.1.0
# Requirements : None
#
# Description:
#   This program manage Bashify projects. More information, see manual
#   section.
#
# Changelog:
# --------------------------------------------------------------------------
#   * 0.1.0, 2007.11.04
#     * Initial build.
#

declare -Ft new

function project {

  declare project_path=$1
  declare project_name=${project_path##*/}
  declare project_base=${project_path%%$project_name}

  declare -a project_directories=('bin' 'doc' 'etc' 'lib' 'test' 'vendor')
  declare -a       project_files=('README' 'TODO')
  declare -a   project_documents=('AUTHORS' 'COPYING' 'CREDITS' 'Changelog' 'LICENCE' 'NEWS' 'NOTES')

  declare -F make_directory

  function make_directory {
    declare directory_path=$1
    declare file=''

    # [[ !$directory_path ]] && return 1

    mkdir -p $directory_path && printf "%3s* $directory_path\n"
    shift

    while [[ $# -gt 0 ]]; do
      file=$1
      echo "# Project $project_name. Input $file contents in this file." > $directory_path/$file && printf "%3s* $directory_path/$file\n"
      shift
    done
  }

  printf "Creating project $project_path ...\n"
  make_directory $project_path        ${project_files[@]}
  make_directory $project_path/bin    $project_name
  make_directory $project_path/doc    ${project_documents[@]}
  make_directory $project_path/etc    $project_name.conf
  make_directory $project_path/lib    $project_name.sh
  make_directory $project_path/test   test_$project_name.sh
  make_directory $project_path/vendor

  return 0
}

## Run all options
$@
