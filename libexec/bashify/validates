############################################################################
# Bashify
# $Id: validates 2 2008-06-26 17:22:34Z hallison $
#
# Copyright (C) 2007 by Hallison Vasconcelos Batista
# --------------------------------------------------------------------------
#   This file is part of Bashify.
#
#   Bashify is free software; you can redistribute it and or modify it under
#   the terms of the GNU Lesser General Public License as published by the
#   Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   Bashify is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
#   more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the
#   Free Software Foundation, Inc.,
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# --------------------------------------------------------------------------

#DOC
# Author:
#   Hallison Vasconcelos Batista <hallison.batista@gmail.com>
#
# Timestamp:
#   2008.0505 17:06:36 AMT
#
# Version:
#   0.1.0
#
# Requirements:
#   None
#
# Description:
#   This script should be used as library in source script file or into
#   Bash sessions. The goal is improve conditional tests.
#
# Changelog:
#   * 0.1.0, 2008.05.06
#     * Added basic constants for use exit errors.
#   * 0.1.0, 2008.05.05
#     * Initial build.
#
# Todo:
#   * Add constants for code errors.
#   * Create subfunctions for error messages.
#   * What's meaning this messages?
#

##  SYSEXITS.H -- Exit status codes for system programs.
##
##	This include file attempts to categorize possible error
##	exit statuses for system programs, notably delivermail
##	and the Berkeley network.
##
##	Error numbers begin at EX__BASE to reduce the possibility of
##	clashing with other exit statuses that random programs may
##	already return.  The meaning of the codes is approximately
##	as follows:
##
##	EX_USAGE -- The command was used incorrectly, e.g., with
##		the wrong number of arguments, a bad flag, a bad
##		syntax in a parameter, or whatever.
##	EX_DATAERR -- The input data was incorrect in some way.
##		This should only be used for user's data & not
##		system files.
##	EX_NOINPUT -- An input file (not a system file) did not
##		exist or was not readable.  This could also include
##		errors like "No message" to a mailer (if it cared
##		to catch it).
##	EX_NOUSER -- The user specified did not exist.  This might
##		be used for mail addresses or remote logins.
##	EX_NOHOST -- The host specified did not exist.  This is used
##		in mail addresses or network requests.
##	EX_UNAVAILABLE -- A service is unavailable.  This can occur
##		if a support program or file does not exist.  This
##		can also be used as a catchall message when something
##		you wanted to do doesn't work, but you don't know
##		why.
##	EX_SOFTWARE -- An internal software error has been detected.
##		This should be limited to non-operating system related
##		errors as possible.
##	EX_OSERR -- An operating system error has been detected.
##		This is intended to be used for such things as "cannot
##		fork", "cannot create pipe", or the like.  It includes
##		things like getuid returning a user that does not
##		exist in the passwd file.
##	EX_OSFILE -- Some system file (e.g., /etc/passwd, /etc/utmp,
##		etc.) does not exist, cannot be opened, or has some
##		sort of error (e.g., syntax error).
##	EX_CANTCREAT -- A (user specified) output file cannot be
##		created.
##	EX_IOERR -- An error occurred while doing I/O on some file.
##	EX_TEMPFAIL -- temporary failure, indicating something that
##		is not really an error.  In sendmail, this means
##		that a mailer (e.g.) could not create a connection,
##		and the request should be reattempted later.
##	EX_PROTOCOL -- the remote system returned something that
##		was "not possible" during a protocol exchange.
##	EX_NOPERM -- You did not have sufficient permission to
##		perform the operation.  This is not intended for
##		file system problems, which should use NOINPUT or
##		CANTCREAT, but rather for higher level permissions.
##/

##efine EX_OK		0	/* successful termination */

##efine EX__BASE	64	/* base value for error messages */


function validates() {
  # General constants for exit script programs
  declare -ir EXIT_NONE=0
  declare -ir EXIT_ERROR=1
  declare -ir EXIT_SUCCESSFUL=0
  declare -ir EXIT_FAILURE=1
  declare -ir EXIT_BASE=64

  # Constants for exit console errors
  declare -ir EXIT_ERROR_USAGE=1
  declare -ir EXIT_ERROR_INVALID_ARGUMENT=2
  declare -ir EXIT_ERROR_INVALID_COMMAND=127

  # Constants for exit errors extracted from /usr/include/sysexit.h
  declare -ir EXIT_ERROR_COMMAND_USAGE=64 # Command line usage error 
  declare -ir EXIT_ERROR_DATA_FORMAT=65   # Data format error 
  declare -ir EXIT_ERROR_NO_INPUT=66      # Cannot open input 
  declare -ir EXIT_ERROR_NO_USER=67       # Addressee unknown 
  declare -ir EXIT_ERROR_NO_HOST=68       # Host name unknown 
  declare -ir EXIT_ERROR_UNAVAILABLE=69   # Service unavailable 
  declare -ir EXIT_ERROR_INTERNAL=70      # Internal software error 
  declare -ir EXIT_ERROR_SYSTEM=71        # System error (e.g., can't fork) 
  declare -ir EXIT_ERROR_FILE_MISSING=72  # Critical OS file missing 
  declare -ir EXIT_ERROR_NO_OUTPUT=73     # Can't create (user) output file 
  declare -ir EXIT_ERROR_IO=74            # Input/output error 
  declare -ir EXIT_ERROR_TEMP_FAIL=75     # Temp failure; user is invited to retry 
  declare -ir EXIT_ERROR_PROTOCOL=76      # Remote error in protocol 
  declare -ir EXIT_ERROR_NO_PERMISSION=77 # Permission denied 
  declare -ir EXIT_ERROR_CONFIG=78        # Configuration error 
  declare -ir EXIT_ERROR_VALUE=78         # Maximum listed value 

  # Constants for exit messages
  declare -ar EXIT_MESSAGE=(
    [EXIT_ERROR_USAGE]=$"The command/function was used incorrectly. "
    [EXIT_ERROR_INVALID_ARGUMENT]=$"Argument '?' is invalid. "
    [EXIT_ERROR_INVALID_COMMAND]=$"Command or function ? not found. "
    [EXIT_ERROR_COMMAND_USAGE]=$"? was used incorrectly. "
    [EXIT_ERROR_DATA_FORMAT]=$"The input data was incorrect in some way. "
    [EXIT_ERROR_NO_INPUT]=$"The input file did not exist or was not readable. "
    [EXIT_ERROR_NO_USER]=$"Ther user ? did not exists. "
    [EXIT_ERROR_NO_HOST]=$""
    [69]=$""
    [70]=$""
    [71]=$""
    [72]=$""
    [73]=$""
    [74]=$""
    [75]=$""
    [76]=$""
    [77]=$""
    [78]=$""
  )

  function message() {
    [[ ${#} -eq   ]]
    echo "${ERROR_MESSAGE[${1}]}"
  }
  return 0
}
#define	EPERM		 1	/* Operation not permitted */
#define	ENOENT		 2	/* No such file or directory */
#define	ESRCH		 3	/* No such process */
#define	EINTR		 4	/* Interrupted system call */
#define	EIO		 5	/* I/O error */
#define	ENXIO		 6	/* No such device or address */
#define	E2BIG		 7	/* Argument list too long */
#define	ENOEXEC		 8	/* Exec format error */
#define	EBADF		 9	/* Bad file number */
#define	ECHILD		10	/* No child processes */
#define	EAGAIN		11	/* Try again */
#define	ENOMEM		12	/* Out of memory */
#define	EACCES		13	/* Permission denied */
#define	EFAULT		14	/* Bad address */
#define	ENOTBLK		15	/* Block device required */
#define	EBUSY		16	/* Device or resource busy */
#define	EEXIST		17	/* File exists */
#define	EXDEV		18	/* Cross-device link */
#define	ENODEV		19	/* No such device */
#define	ENOTDIR		20	/* Not a directory */
#define	EISDIR		21	/* Is a directory */
#define	EINVAL		22	/* Invalid argument */
#define	ENFILE		23	/* File table overflow */
#define	EMFILE		24	/* Too many open files */
#define	ENOTTY		25	/* Not a typewriter */
#define	ETXTBSY		26	/* Text file busy */
#define	EFBIG		27	/* File too large */
#define	ENOSPC		28	/* No space left on device */
#define	ESPIPE		29	/* Illegal seek */
#define	EROFS		30	/* Read-only file system */
#define	EMLINK		31	/* Too many links */
#define	EPIPE		32	/* Broken pipe */
#define	EDOM		33	/* Math argument out of domain of func */
#define	ERANGE		34	/* Math result not representable */


#define	EDEADLK		35	/* Resource deadlock would occur */
#define	ENAMETOOLONG	36	/* File name too long */
#define	ENOLCK		37	/* No record locks available */
#define	ENOSYS		38	/* Function not implemented */
#define	ENOTEMPTY	39	/* Directory not empty */
#define	ELOOP		40	/* Too many symbolic links encountered */
#define	EWOULDBLOCK	EAGAIN	/* Operation would block */
#define	ENOMSG		42	/* No message of desired type */
#define	EIDRM		43	/* Identifier removed */
#define	ECHRNG		44	/* Channel number out of range */
#define	EL2NSYNC	45	/* Level 2 not synchronized */
#define	EL3HLT		46	/* Level 3 halted */
#define	EL3RST		47	/* Level 3 reset */
#define	ELNRNG		48	/* Link number out of range */
#define	EUNATCH		49	/* Protocol driver not attached */
#define	ENOCSI		50	/* No CSI structure available */
#define	EL2HLT		51	/* Level 2 halted */
#define	EBADE		52	/* Invalid exchange */
#define	EBADR		53	/* Invalid request descriptor */
#define	EXFULL		54	/* Exchange full */
#define	ENOANO		55	/* No anode */
#define	EBADRQC		56	/* Invalid request code */
#define	EBADSLT		57	/* Invalid slot */

#define	EDEADLOCK	EDEADLK

#define	EBFONT		59	/* Bad font file format */
#define	ENOSTR		60	/* Device not a stream */
#define	ENODATA		61	/* No data available */
#define	ETIME		62	/* Timer expired */
#define	ENOSR		63	/* Out of streams resources */
#define	ENONET		64	/* Machine is not on the network */
#define	ENOPKG		65	/* Package not installed */
#define	EREMOTE		66	/* Object is remote */
#define	ENOLINK		67	/* Link has been severed */
#define	EADV		68	/* Advertise error */
#define	ESRMNT		69	/* Srmount error */
#define	ECOMM		70	/* Communication error on send */
#define	EPROTO		71	/* Protocol error */
#define	EMULTIHOP	72	/* Multihop attempted */
#define	EDOTDOT		73	/* RFS specific error */
#define	EBADMSG		74	/* Not a data message */
#define	EOVERFLOW	75	/* Value too large for defined data type */
#define	ENOTUNIQ	76	/* Name not unique on network */
#define	EBADFD		77	/* File descriptor in bad state */
#define	EREMCHG		78	/* Remote address changed */
#define	ELIBACC		79	/* Can not access a needed shared library */
#define	ELIBBAD		80	/* Accessing a corrupted shared library */
#define	ELIBSCN		81	/* .lib section in a.out corrupted */
#define	ELIBMAX		82	/* Attempting to link in too many shared libraries */
#define	ELIBEXEC	83	/* Cannot exec a shared library directly */
#define	EILSEQ		84	/* Illegal byte sequence */
#define	ERESTART	85	/* Interrupted system call should be restarted */
#define	ESTRPIPE	86	/* Streams pipe error */
#define	EUSERS		87	/* Too many users */
#define	ENOTSOCK	88	/* Socket operation on non-socket */
#define	EDESTADDRREQ	89	/* Destination address required */
#define	EMSGSIZE	90	/* Message too long */
#define	EPROTOTYPE	91	/* Protocol wrong type for socket */
#define	ENOPROTOOPT	92	/* Protocol not available */
#define	EPROTONOSUPPORT	93	/* Protocol not supported */
#define	ESOCKTNOSUPPORT	94	/* Socket type not supported */
#define	EOPNOTSUPP	95	/* Operation not supported on transport endpoint */
#define	EPFNOSUPPORT	96	/* Protocol family not supported */
#define	EAFNOSUPPORT	97	/* Address family not supported by protocol */
#define	EADDRINUSE	98	/* Address already in use */
#define	EADDRNOTAVAIL	99	/* Cannot assign requested address */
#define	ENETDOWN	100	/* Network is down */
#define	ENETUNREACH	101	/* Network is unreachable */
#define	ENETRESET	102	/* Network dropped connection because of reset */
#define	ECONNABORTED	103	/* Software caused connection abort */
#define	ECONNRESET	104	/* Connection reset by peer */
#define	ENOBUFS		105	/* No buffer space available */
#define	EISCONN		106	/* Transport endpoint is already connected */
#define	ENOTCONN	107	/* Transport endpoint is not connected */
#define	ESHUTDOWN	108	/* Cannot send after transport endpoint shutdown */
#define	ETOOMANYREFS	109	/* Too many references: cannot splice */
#define	ETIMEDOUT	110	/* Connection timed out */
#define	ECONNREFUSED	111	/* Connection refused */
#define	EHOSTDOWN	112	/* Host is down */
#define	EHOSTUNREACH	113	/* No route to host */
#define	EALREADY	114	/* Operation already in progress */
#define	EINPROGRESS	115	/* Operation now in progress */
#define	ESTALE		116	/* Stale NFS file handle */
#define	EUCLEAN		117	/* Structure needs cleaning */
#define	ENOTNAM		118	/* Not a XENIX named type file */
#define	ENAVAIL		119	/* No XENIX semaphores available */
#define	EISNAM		120	/* Is a named type file */
#define	EREMOTEIO	121	/* Remote I/O error */
#define	EDQUOT		122	/* Quota exceeded */

#define	ENOMEDIUM	123	/* No medium found */
#define	EMEDIUMTYPE	124	/* Wrong medium type */
#define	ECANCELED	125	/* Operation Canceled */
#define	ENOKEY		126	/* Required key not available */
#define	EKEYEXPIRED	127	/* Key has expired */
#define	EKEYREVOKED	128	/* Key has been revoked */
#define	EKEYREJECTED	129	/* Key was rejected by service */

/* for robust mutexes */
#define	EOWNERDEAD	130	/* Owner died */
#define	ENOTRECOVERABLE	131	/* State not recoverable */

